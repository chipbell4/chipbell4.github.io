!function(){"use strict";const t={current:"RED",colors:{RED:[50,0,0],ORANGE:[40,10,0],YELLOW:[25,25,0],GREEN:[0,50,0],BLUE:[0,0,50],PURPLE:[25,0,25],BLACK:[0,0,0]},set:function(t){this.current=t}},e={width:function(t){return 20*(1-Math.exp(-.001*t))+10},isFinished:function(t){return 30-this.width(t)<=.5}};const n=document.querySelector("#canvas").getContext("2d"),o={},c=e=>{const c=t.colors[e];(function(t){const e=new Image;return new Promise((n,o)=>{e.onload=(()=>n(e)),e.src=t})})("noise.png").then(t=>(function(t,e,n,o){const c=document.createElement("canvas");c.width=t.width,c.height=t.height;const r=c.getContext("2d");r.drawImage(t,0,0);const i=r.getImageData(0,0,c.width,c.height);for(let t=0;t<i.data.length;t+=4)i.data[t]=Math.floor(i.data[t]+e),i.data[t+1]=Math.floor(i.data[t+1]+n),i.data[t+2]=Math.floor(i.data[t+2]+o);return r.putImageData(i,0,0),c})(t,c[0],c[1],c[2])).then(t=>n.createPattern(t,"repeat")).then(t=>o[e]=t)};Object.keys(t.colors).forEach(c);const r=function(t){if(void 0!==o[t=t||"BLUE"])return o[t];c(t)},i=document.querySelector("#cache").getContext("2d"),s=function(t){i.lineJoin="round",i.lineCap="round";const e=t[0][3];null!==r()&&(i.strokeStyle=r(e)),i.beginPath(),i.moveTo(t[0][0],t[0][1]);for(let e=1;e<t.length;e++)i.lineTo(t[e][0],t[e][1]);i.stroke()};const a=document.querySelector("#canvas");let u=!1;const d=t=>{if(t instanceof TouchEvent){const e=t.touches[0];return[e.clientX,e.clientY]}return[t.clientX,t.clientY]},h=e=>{const[n,o]=d(e);u=!0,f.curves.push([]),f.curves[f.curves.length-1].push([n,o,performance.now(),t.current])},l=t=>{u=!1},v=t=>{if(!u)return;const e=f.curves[f.curves.length-1],n=e[e.length-1],o=d(t),c=function(t,e,n){const o=(t[0]+e[0])/2,c=(t[1]+e[1])/2;let r=e[0]-t[0],i=e[1]-t[1],s=Math.max(Math.abs(r),Math.abs(i));r/=s,i/=s;const a=2*Math.random()-1;return[o-i*n*a,c+r*n*a]}(n,o,2);o.push(performance.now()),c.push((n[2]+o[2])/2),e.push(c),e.push(o)},f={curves:[],init:function(){void 0===window.ontouchstart?(a.addEventListener("mousedown",h),a.addEventListener("mouseup",l),a.addEventListener("mouseout",l),a.addEventListener("mousemove",v)):(a.addEventListener("touchstart",h),a.addEventListener("touchup",l),a.addEventListener("touchmove",v))},cacheAvailable:function(){for(let t=0;t<f.curves.length;t++){const n=f.curves[t],o=performance.now()-n[n.length-1][2];e.isFinished(o)&&(console.log("Adding brush "+t),s(n),f.curves.splice(t,1),t--)}}},m=document.querySelector("#canvas"),g=document.querySelector("#cache"),w={init:function(){window.addEventListener("resize",()=>{w.fitCanvas(m),w.fitCanvas(g)}),w.fitCanvas(m),w.fitCanvas(g)},fitCanvas:function(t){t.width=window.innerWidth,t.height=window.innerHeight}};function E(t,n,o){for(let c=0;c<o.length-1;c++){const i=o[c],s=(o[c+1],n-i[2]);t.lineWidth=e.width(s);const a=o[0][3];t.strokeStyle=r(a),t.beginPath(),t.moveTo(o[c][0],o[c][1]),t.lineTo(o[c+1][0],o[c+1][1]),t.stroke()}}const p=document.querySelectorAll(".color"),L=e=>{t.set(e.target.dataset.color)};for(let t=0;t<p.length;t++)p[t].addEventListener("click",L);const C=document.querySelector("#canvas").getContext("2d");f.init(),w.init();const y=function(t){requestAnimationFrame(y),C.lineJoin="round",C.lineCap="round",null!==r()&&(C.strokeStyle=r()),f.cacheAvailable();for(let e=0;e<f.curves.length;e++)E(C,t,f.curves[e])};requestAnimationFrame(y)}();
